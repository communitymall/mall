package org.linlinjava.litemall.db.domain;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallMerchantExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public LitemallMerchantExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public LitemallMerchantExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public LitemallMerchantExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallMerchantExample example = new LitemallMerchantExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public LitemallMerchantExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public LitemallMerchantExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMerchantNameIsNull() {
            addCriterion("merchant_name is null");
            return (Criteria) this;
        }

        public Criteria andMerchantNameIsNotNull() {
            addCriterion("merchant_name is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantNameEqualTo(String value) {
            addCriterion("merchant_name =", value, "merchantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantNameEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantNameNotEqualTo(String value) {
            addCriterion("merchant_name <>", value, "merchantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantNameNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantNameGreaterThan(String value) {
            addCriterion("merchant_name >", value, "merchantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantNameGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantNameGreaterThanOrEqualTo(String value) {
            addCriterion("merchant_name >=", value, "merchantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantNameGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantNameLessThan(String value) {
            addCriterion("merchant_name <", value, "merchantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantNameLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantNameLessThanOrEqualTo(String value) {
            addCriterion("merchant_name <=", value, "merchantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantNameLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantNameLike(String value) {
            addCriterion("merchant_name like", value, "merchantName");
            return (Criteria) this;
        }

        public Criteria andMerchantNameNotLike(String value) {
            addCriterion("merchant_name not like", value, "merchantName");
            return (Criteria) this;
        }

        public Criteria andMerchantNameIn(List<String> values) {
            addCriterion("merchant_name in", values, "merchantName");
            return (Criteria) this;
        }

        public Criteria andMerchantNameNotIn(List<String> values) {
            addCriterion("merchant_name not in", values, "merchantName");
            return (Criteria) this;
        }

        public Criteria andMerchantNameBetween(String value1, String value2) {
            addCriterion("merchant_name between", value1, value2, "merchantName");
            return (Criteria) this;
        }

        public Criteria andMerchantNameNotBetween(String value1, String value2) {
            addCriterion("merchant_name not between", value1, value2, "merchantName");
            return (Criteria) this;
        }

        public Criteria andMerchantCodeIsNull() {
            addCriterion("merchant_code is null");
            return (Criteria) this;
        }

        public Criteria andMerchantCodeIsNotNull() {
            addCriterion("merchant_code is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantCodeEqualTo(String value) {
            addCriterion("merchant_code =", value, "merchantCode");
            return (Criteria) this;
        }

//        public Criteria andMerchantConsigneeIdEqualTo(Integer value) {
//            addCriterion("consignee_id =", value, "consigneeId");
//            return (Criteria) this;
//        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantCodeEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantCodeNotEqualTo(String value) {
            addCriterion("merchant_code <>", value, "merchantCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantCodeNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantCodeGreaterThan(String value) {
            addCriterion("merchant_code >", value, "merchantCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantCodeGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantCodeGreaterThanOrEqualTo(String value) {
            addCriterion("merchant_code >=", value, "merchantCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantCodeGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantCodeLessThan(String value) {
            addCriterion("merchant_code <", value, "merchantCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantCodeLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantCodeLessThanOrEqualTo(String value) {
            addCriterion("merchant_code <=", value, "merchantCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantCodeLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantCodeLike(String value) {
            addCriterion("merchant_code like", value, "merchantCode");
            return (Criteria) this;
        }

        public Criteria andMerchantCodeNotLike(String value) {
            addCriterion("merchant_code not like", value, "merchantCode");
            return (Criteria) this;
        }

        public Criteria andMerchantCodeIn(List<String> values) {
            addCriterion("merchant_code in", values, "merchantCode");
            return (Criteria) this;
        }

        public Criteria andMerchantCodeNotIn(List<String> values) {
            addCriterion("merchant_code not in", values, "merchantCode");
            return (Criteria) this;
        }

        public Criteria andMerchantCodeBetween(String value1, String value2) {
            addCriterion("merchant_code between", value1, value2, "merchantCode");
            return (Criteria) this;
        }

        public Criteria andMerchantCodeNotBetween(String value1, String value2) {
            addCriterion("merchant_code not between", value1, value2, "merchantCode");
            return (Criteria) this;
        }

        public Criteria andMerchantAddressIsNull() {
            addCriterion("merchant_address is null");
            return (Criteria) this;
        }

        public Criteria andMerchantAddressIsNotNull() {
            addCriterion("merchant_address is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantAddressEqualTo(String value) {
            addCriterion("merchant_address =", value, "merchantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantAddressEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantAddressNotEqualTo(String value) {
            addCriterion("merchant_address <>", value, "merchantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantAddressNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantAddressGreaterThan(String value) {
            addCriterion("merchant_address >", value, "merchantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantAddressGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantAddressGreaterThanOrEqualTo(String value) {
            addCriterion("merchant_address >=", value, "merchantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantAddressGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantAddressLessThan(String value) {
            addCriterion("merchant_address <", value, "merchantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantAddressLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantAddressLessThanOrEqualTo(String value) {
            addCriterion("merchant_address <=", value, "merchantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantAddressLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantAddressLike(String value) {
            addCriterion("merchant_address like", value, "merchantAddress");
            return (Criteria) this;
        }

        public Criteria andMerchantAddressNotLike(String value) {
            addCriterion("merchant_address not like", value, "merchantAddress");
            return (Criteria) this;
        }

        public Criteria andMerchantAddressIn(List<String> values) {
            addCriterion("merchant_address in", values, "merchantAddress");
            return (Criteria) this;
        }

        public Criteria andMerchantAddressNotIn(List<String> values) {
            addCriterion("merchant_address not in", values, "merchantAddress");
            return (Criteria) this;
        }

        public Criteria andMerchantAddressBetween(String value1, String value2) {
            addCriterion("merchant_address between", value1, value2, "merchantAddress");
            return (Criteria) this;
        }

        public Criteria andMerchantAddressNotBetween(String value1, String value2) {
            addCriterion("merchant_address not between", value1, value2, "merchantAddress");
            return (Criteria) this;
        }

        public Criteria andMerchantPicIsNull() {
            addCriterion("merchant_pic is null");
            return (Criteria) this;
        }

        public Criteria andMerchantPicIsNotNull() {
            addCriterion("merchant_pic is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantPicEqualTo(String value) {
            addCriterion("merchant_pic =", value, "merchantPic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPicEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_pic = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPicNotEqualTo(String value) {
            addCriterion("merchant_pic <>", value, "merchantPic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPicNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_pic <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPicGreaterThan(String value) {
            addCriterion("merchant_pic >", value, "merchantPic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPicGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_pic > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPicGreaterThanOrEqualTo(String value) {
            addCriterion("merchant_pic >=", value, "merchantPic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPicGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_pic >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPicLessThan(String value) {
            addCriterion("merchant_pic <", value, "merchantPic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPicLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_pic < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPicLessThanOrEqualTo(String value) {
            addCriterion("merchant_pic <=", value, "merchantPic");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPicLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_pic <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPicLike(String value) {
            addCriterion("merchant_pic like", value, "merchantPic");
            return (Criteria) this;
        }

        public Criteria andMerchantPicNotLike(String value) {
            addCriterion("merchant_pic not like", value, "merchantPic");
            return (Criteria) this;
        }

        public Criteria andMerchantPicIn(List<String> values) {
            addCriterion("merchant_pic in", values, "merchantPic");
            return (Criteria) this;
        }

        public Criteria andMerchantPicNotIn(List<String> values) {
            addCriterion("merchant_pic not in", values, "merchantPic");
            return (Criteria) this;
        }

        public Criteria andMerchantPicBetween(String value1, String value2) {
            addCriterion("merchant_pic between", value1, value2, "merchantPic");
            return (Criteria) this;
        }

        public Criteria andMerchantPicNotBetween(String value1, String value2) {
            addCriterion("merchant_pic not between", value1, value2, "merchantPic");
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneIsNull() {
            addCriterion("merchant_phone is null");
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneIsNotNull() {
            addCriterion("merchant_phone is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneEqualTo(String value) {
            addCriterion("merchant_phone =", value, "merchantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPhoneEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneNotEqualTo(String value) {
            addCriterion("merchant_phone <>", value, "merchantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPhoneNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneGreaterThan(String value) {
            addCriterion("merchant_phone >", value, "merchantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPhoneGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("merchant_phone >=", value, "merchantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPhoneGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneLessThan(String value) {
            addCriterion("merchant_phone <", value, "merchantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPhoneLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneLessThanOrEqualTo(String value) {
            addCriterion("merchant_phone <=", value, "merchantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantPhoneLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneLike(String value) {
            addCriterion("merchant_phone like", value, "merchantPhone");
            return (Criteria) this;
        }

        /////////////////////////////////////////////////////////
        public Criteria andMerchantConsigneeNameLike(String value) {
            addCriterion("consignee_name like", value, "consigneeName");
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneNotLike(String value) {
            addCriterion("merchant_phone not like", value, "merchantPhone");
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneIn(List<String> values) {
            addCriterion("merchant_phone in", values, "merchantPhone");
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneNotIn(List<String> values) {
            addCriterion("merchant_phone not in", values, "merchantPhone");
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneBetween(String value1, String value2) {
            addCriterion("merchant_phone between", value1, value2, "merchantPhone");
            return (Criteria) this;
        }

        public Criteria andMerchantPhoneNotBetween(String value1, String value2) {
            addCriterion("merchant_phone not between", value1, value2, "merchantPhone");
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderIsNull() {
            addCriterion("merchant_leader is null");
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderIsNotNull() {
            addCriterion("merchant_leader is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderEqualTo(String value) {
            addCriterion("merchant_leader =", value, "merchantLeader");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantLeaderEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_leader = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderNotEqualTo(String value) {
            addCriterion("merchant_leader <>", value, "merchantLeader");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantLeaderNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_leader <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderGreaterThan(String value) {
            addCriterion("merchant_leader >", value, "merchantLeader");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantLeaderGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_leader > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderGreaterThanOrEqualTo(String value) {
            addCriterion("merchant_leader >=", value, "merchantLeader");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantLeaderGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_leader >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderLessThan(String value) {
            addCriterion("merchant_leader <", value, "merchantLeader");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantLeaderLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_leader < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderLessThanOrEqualTo(String value) {
            addCriterion("merchant_leader <=", value, "merchantLeader");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andMerchantLeaderLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("merchant_leader <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderLike(String value) {
            addCriterion("merchant_leader like", value, "merchantLeader");
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderNotLike(String value) {
            addCriterion("merchant_leader not like", value, "merchantLeader");
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderIn(List<String> values) {
            addCriterion("merchant_leader in", values, "merchantLeader");
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderNotIn(List<String> values) {
            addCriterion("merchant_leader not in", values, "merchantLeader");
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderBetween(String value1, String value2) {
            addCriterion("merchant_leader between", value1, value2, "merchantLeader");
            return (Criteria) this;
        }

        public Criteria andMerchantLeaderNotBetween(String value1, String value2) {
            addCriterion("merchant_leader not between", value1, value2, "merchantLeader");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andEditTimeIsNull() {
            addCriterion("edit_time is null");
            return (Criteria) this;
        }

        public Criteria andEditTimeIsNotNull() {
            addCriterion("edit_time is not null");
            return (Criteria) this;
        }

        public Criteria andEditTimeEqualTo(LocalDateTime value) {
            addCriterion("edit_time =", value, "editTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andEditTimeEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("edit_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEditTimeNotEqualTo(LocalDateTime value) {
            addCriterion("edit_time <>", value, "editTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andEditTimeNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("edit_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEditTimeGreaterThan(LocalDateTime value) {
            addCriterion("edit_time >", value, "editTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andEditTimeGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("edit_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEditTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("edit_time >=", value, "editTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andEditTimeGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("edit_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEditTimeLessThan(LocalDateTime value) {
            addCriterion("edit_time <", value, "editTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andEditTimeLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("edit_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEditTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("edit_time <=", value, "editTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andEditTimeLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("edit_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEditTimeIn(List<LocalDateTime> values) {
            addCriterion("edit_time in", values, "editTime");
            return (Criteria) this;
        }

        public Criteria andEditTimeNotIn(List<LocalDateTime> values) {
            addCriterion("edit_time not in", values, "editTime");
            return (Criteria) this;
        }

        public Criteria andEditTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("edit_time between", value1, value2, "editTime");
            return (Criteria) this;
        }

        public Criteria andEditTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("edit_time not between", value1, value2, "editTime");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("create_date is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("create_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(LocalDate value) {
            addCriterion("create_date =", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateDateEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(LocalDate value) {
            addCriterion("create_date <>", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateDateNotEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(LocalDate value) {
            addCriterion("create_date >", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateDateGreaterThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("create_date >=", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateDateGreaterThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(LocalDate value) {
            addCriterion("create_date <", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateDateLessThanColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("create_date <=", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria andCreateDateLessThanOrEqualToColumn(LitemallMerchant.Column column) {
            addCriterion(new StringBuilder("create_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<LocalDate> values) {
            addCriterion("create_date in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<LocalDate> values) {
            addCriterion("create_date not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("create_date between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("create_date not between", value1, value2, "createDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_merchant
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        private LitemallMerchantExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        protected Criteria(LitemallMerchantExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public LitemallMerchantExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_merchant
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_merchant
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchant
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallMerchantExample example);
    }
}