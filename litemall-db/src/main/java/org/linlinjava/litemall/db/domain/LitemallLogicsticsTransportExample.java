package org.linlinjava.litemall.db.domain;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallLogicsticsTransportExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public LitemallLogicsticsTransportExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public LitemallLogicsticsTransportExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public LitemallLogicsticsTransportExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallLogicsticsTransportExample example = new LitemallLogicsticsTransportExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public LitemallLogicsticsTransportExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public LitemallLogicsticsTransportExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTransitIdIsNull() {
            addCriterion("transit_id is null");
            return (Criteria) this;
        }

        public Criteria andTransitIdIsNotNull() {
            addCriterion("transit_id is not null");
            return (Criteria) this;
        }

        public Criteria andTransitIdEqualTo(String value) {
            addCriterion("transit_id =", value, "transitId");
            return (Criteria) this;
        }



        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitIdEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitIdNotEqualTo(String value) {
            addCriterion("transit_id <>", value, "transitId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitIdNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitIdGreaterThan(String value) {
            addCriterion("transit_id >", value, "transitId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitIdGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitIdGreaterThanOrEqualTo(String value) {
            addCriterion("transit_id >=", value, "transitId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitIdGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitIdLessThan(String value) {
            addCriterion("transit_id <", value, "transitId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitIdLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitIdLessThanOrEqualTo(String value) {
            addCriterion("transit_id <=", value, "transitId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitIdLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitIdLike(String value) {
            addCriterion("transit_id like", value, "transitId");
            return (Criteria) this;
        }

        public Criteria andTransitIdNotLike(String value) {
            addCriterion("transit_id not like", value, "transitId");
            return (Criteria) this;
        }

        public Criteria andTransitIdIn(List<String> values) {
            addCriterion("transit_id in", values, "transitId");
            return (Criteria) this;
        }

        public Criteria andTransitIdNotIn(List<String> values) {
            addCriterion("transit_id not in", values, "transitId");
            return (Criteria) this;
        }

        public Criteria andTransitIdBetween(String value1, String value2) {
            addCriterion("transit_id between", value1, value2, "transitId");
            return (Criteria) this;
        }

        public Criteria andTransitIdNotBetween(String value1, String value2) {
            addCriterion("transit_id not between", value1, value2, "transitId");
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberIsNull() {
            addCriterion("license_plate_number is null");
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberIsNotNull() {
            addCriterion("license_plate_number is not null");
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberEqualTo(String value) {
            addCriterion("license_plate_number =", value, "licensePlateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andLicensePlateNumberEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("license_plate_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberNotEqualTo(String value) {
            addCriterion("license_plate_number <>", value, "licensePlateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andLicensePlateNumberNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("license_plate_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberGreaterThan(String value) {
            addCriterion("license_plate_number >", value, "licensePlateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andLicensePlateNumberGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("license_plate_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberGreaterThanOrEqualTo(String value) {
            addCriterion("license_plate_number >=", value, "licensePlateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andLicensePlateNumberGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("license_plate_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberLessThan(String value) {
            addCriterion("license_plate_number <", value, "licensePlateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andLicensePlateNumberLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("license_plate_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberLessThanOrEqualTo(String value) {
            addCriterion("license_plate_number <=", value, "licensePlateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andLicensePlateNumberLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("license_plate_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberLike(String value) {
            addCriterion("license_plate_number like", value, "licensePlateNumber");
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberNotLike(String value) {
            addCriterion("license_plate_number not like", value, "licensePlateNumber");
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberIn(List<String> values) {
            addCriterion("license_plate_number in", values, "licensePlateNumber");
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberNotIn(List<String> values) {
            addCriterion("license_plate_number not in", values, "licensePlateNumber");
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberBetween(String value1, String value2) {
            addCriterion("license_plate_number between", value1, value2, "licensePlateNumber");
            return (Criteria) this;
        }

        public Criteria andLicensePlateNumberNotBetween(String value1, String value2) {
            addCriterion("license_plate_number not between", value1, value2, "licensePlateNumber");
            return (Criteria) this;
        }

        public Criteria andDriverIsNull() {
            addCriterion("driver is null");
            return (Criteria) this;
        }

        public Criteria andDriverIsNotNull() {
            addCriterion("driver is not null");
            return (Criteria) this;
        }

        public Criteria andDriverEqualTo(String value) {
            addCriterion("driver =", value, "driver");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andDriverEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("driver = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverNotEqualTo(String value) {
            addCriterion("driver <>", value, "driver");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andDriverNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("driver <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverGreaterThan(String value) {
            addCriterion("driver >", value, "driver");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andDriverGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("driver > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverGreaterThanOrEqualTo(String value) {
            addCriterion("driver >=", value, "driver");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andDriverGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("driver >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverLessThan(String value) {
            addCriterion("driver <", value, "driver");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andDriverLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("driver < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverLessThanOrEqualTo(String value) {
            addCriterion("driver <=", value, "driver");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andDriverLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("driver <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverLike(String value) {
            addCriterion("driver like", value, "driver");
            return (Criteria) this;
        }

        public Criteria andDriverNotLike(String value) {
            addCriterion("driver not like", value, "driver");
            return (Criteria) this;
        }

        public Criteria andDriverIn(List<String> values) {
            addCriterion("driver in", values, "driver");
            return (Criteria) this;
        }

        public Criteria andDriverNotIn(List<String> values) {
            addCriterion("driver not in", values, "driver");
            return (Criteria) this;
        }

        public Criteria andDriverBetween(String value1, String value2) {
            addCriterion("driver between", value1, value2, "driver");
            return (Criteria) this;
        }

        public Criteria andDriverNotBetween(String value1, String value2) {
            addCriterion("driver not between", value1, value2, "driver");
            return (Criteria) this;
        }

        public Criteria andFreightIsNull() {
            addCriterion("freight is null");
            return (Criteria) this;
        }

        public Criteria andFreightIsNotNull() {
            addCriterion("freight is not null");
            return (Criteria) this;
        }

        public Criteria andFreightEqualTo(Integer value) {
            addCriterion("freight =", value, "freight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andFreightEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("freight = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFreightNotEqualTo(Integer value) {
            addCriterion("freight <>", value, "freight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andFreightNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("freight <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFreightGreaterThan(Integer value) {
            addCriterion("freight >", value, "freight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andFreightGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("freight > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFreightGreaterThanOrEqualTo(Integer value) {
            addCriterion("freight >=", value, "freight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andFreightGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("freight >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFreightLessThan(Integer value) {
            addCriterion("freight <", value, "freight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andFreightLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("freight < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFreightLessThanOrEqualTo(Integer value) {
            addCriterion("freight <=", value, "freight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andFreightLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("freight <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFreightIn(List<Integer> values) {
            addCriterion("freight in", values, "freight");
            return (Criteria) this;
        }

        public Criteria andFreightNotIn(List<Integer> values) {
            addCriterion("freight not in", values, "freight");
            return (Criteria) this;
        }

        public Criteria andFreightBetween(Integer value1, Integer value2) {
            addCriterion("freight between", value1, value2, "freight");
            return (Criteria) this;
        }

        public Criteria andFreightNotBetween(Integer value1, Integer value2) {
            addCriterion("freight not between", value1, value2, "freight");
            return (Criteria) this;
        }

        public Criteria andTransitStatusIsNull() {
            addCriterion("transit_status is null");
            return (Criteria) this;
        }

        public Criteria andTransitStatusIsNotNull() {
            addCriterion("transit_status is not null");
            return (Criteria) this;
        }

        public Criteria andTransitStatusEqualTo(Short value) {
            addCriterion("transit_status =", value, "transitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitStatusEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitStatusNotEqualTo(Short value) {
            addCriterion("transit_status <>", value, "transitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitStatusNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitStatusGreaterThan(Short value) {
            addCriterion("transit_status >", value, "transitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitStatusGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("transit_status >=", value, "transitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitStatusGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitStatusLessThan(Short value) {
            addCriterion("transit_status <", value, "transitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitStatusLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitStatusLessThanOrEqualTo(Short value) {
            addCriterion("transit_status <=", value, "transitStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andTransitStatusLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("transit_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransitStatusIn(List<Short> values) {
            addCriterion("transit_status in", values, "transitStatus");
            return (Criteria) this;
        }

        public Criteria andTransitStatusNotIn(List<Short> values) {
            addCriterion("transit_status not in", values, "transitStatus");
            return (Criteria) this;
        }

        public Criteria andTransitStatusBetween(Short value1, Short value2) {
            addCriterion("transit_status between", value1, value2, "transitStatus");
            return (Criteria) this;
        }

        public Criteria andTransitStatusNotBetween(Short value1, Short value2) {
            addCriterion("transit_status not between", value1, value2, "transitStatus");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("create_date is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("create_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(LocalDate value) {
            addCriterion("create_date =", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateDateEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(LocalDate value) {
            addCriterion("create_date <>", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateDateNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(LocalDate value) {
            addCriterion("create_date >", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateDateGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("create_date >=", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateDateGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(LocalDate value) {
            addCriterion("create_date <", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateDateLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("create_date <=", value, "createDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateDateLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<LocalDate> values) {
            addCriterion("create_date in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<LocalDate> values) {
            addCriterion("create_date not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("create_date between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("create_date not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("create_user is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("create_user is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(String value) {
            addCriterion("create_user =", value, "createUser");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateUserEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_user = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(String value) {
            addCriterion("create_user <>", value, "createUser");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateUserNotEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_user <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(String value) {
            addCriterion("create_user >", value, "createUser");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateUserGreaterThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_user > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(String value) {
            addCriterion("create_user >=", value, "createUser");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateUserGreaterThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_user >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(String value) {
            addCriterion("create_user <", value, "createUser");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateUserLessThanColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_user < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(String value) {
            addCriterion("create_user <=", value, "createUser");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria andCreateUserLessThanOrEqualToColumn(LitemallLogicsticsTransport.Column column) {
            addCriterion(new StringBuilder("create_user <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateUserLike(String value) {
            addCriterion("create_user like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLike(String value) {
            addCriterion("create_user not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<String> values) {
            addCriterion("create_user in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<String> values) {
            addCriterion("create_user not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(String value1, String value2) {
            addCriterion("create_user between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(String value1, String value2) {
            addCriterion("create_user not between", value1, value2, "createUser");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        private LitemallLogicsticsTransportExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        protected Criteria(LitemallLogicsticsTransportExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public LitemallLogicsticsTransportExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_logicstics_transport
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_logicstics_transport
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_logicstics_transport
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallLogicsticsTransportExample example);
    }
}